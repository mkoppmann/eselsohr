name: CI

on: push

permissions:
  contents: read

jobs:
  hlint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8

      - name: "Set up HLint"
        uses: haskell-actions/hlint-setup@fe9cd1cd1af94a23900c06738e73f6ddb092966a

      - name: "Run HLint"
        uses: haskell-actions/hlint-run@eaca4cfbf4a69f4eb875df38b6bc3e1657020378
        with:
          path: '["app/", "src/", "test/"]'
          fail-on: warning

  fourmolu:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8

      - name: "Check formatting with Fourmolu"
        uses: haskell-actions/run-fourmolu@3b7702b41516aa428dfe6e295dc73476ae58f69e

  build-binary:
    needs: hlint

    runs-on: ubuntu-latest

    env:
      CONFIG: "--enable-tests --enable-benchmarks"

    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8
      - uses: haskell-actions/setup@82e8b5066385702e477d9dc98f287070493e8abd
        id: setup-haskell-cabal
        with:
          ghc-version: "9.8"
          cabal-version: "latest"

      - name: Update Hackage snapshot
        run: |
          cabal update
          cabal freeze $CONFIG

      - name: Cache dependencies
        uses: actions/cache@0057852bfaa89a56745cba8c7296529d2fc39830
        with:
          path: |
            ${{ steps.setup-haskell-cabal.outputs.cabal-store }}
            dist-newstyle
          key: ${{ runner.os }}-${{ matrix.ghc }}-${{ hashFiles('cabal.project.freeze') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.ghc }}-

      - name: Build dependencies
        run: cabal build --only-dependencies $CONFIG

      - name: Build application
        run: cabal build $CONFIG all

      - name: Run tests
        run: cabal test $CONFIG all

      - name: Generate documentation
        run: cabal haddock $CONFIG all

      - name: Install binary
        run: cabal install --enable-executable-static --install-method=copy --overwrite-policy=always --installdir=dist/

      - name: Rename binary
        run: mv dist/eselsohr-exe dist/eselsohr

      - name: Store application binary as artifact
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02
        with:
          name: eselsohr
          path: dist/eselsohr
